# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    jobs:
      - job: FirstJob
        steps:
        - bash: echo Build FirstJob
      - job: SecondJob
        steps: 
        - bash: echo $(pipelinevariable)
        - bash: echo $(Build.BuildNumber)
        - bash: echo $(Build.ContainerId)
        - bash: echo $(System.DefaultWorkingDirectory)
        - bash: echo $(Build.ArtifactStagingDirectory)
        - bash: java -version
        - bash: node --version
        - bash: python --version
        - bash: ls -R $(Build.ArtifactStagingDirectory)

        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(System.DefaultWorkingDirectory)'
            Contents: |
              **/*.yaml
              **/*.tf
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

  # - stage: DevDeploy
  #   variables:
  #     environment: Dev
  #   jobs:
  #     - job: DevDeploy1
  #       steps:
  #       - bash: echo Build $(environment)
  #     - job: DevDeploy2
  #       steps: 
  #       - bash: echo Build Devploy 2

  # - stage: QADeploy
  #   variables:
  #     environment: QA
  #   jobs:
  #     - job: QADeploy1
  #       steps:
  #       - bash: echo Build $(environment)
  #     - job: QADeploy2
  #       steps: 
  #       - bash: echo Build QADeploy 2
  # - stage: ProdDeploy
  #   jobs:
  #     - job: ProdDeploy1
  #       steps:
  #       - bash: echo Build ProdDeploy
  #     - job: ProdDeploy2
  #       steps: 
  #       - bash: echo Build ProdDeploy 2


